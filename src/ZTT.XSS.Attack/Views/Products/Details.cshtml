@model ZTT.XSS.Attack.Data.DbProduct

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>DbProduct</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(@Model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Cost)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Cost)
        </dd>
        <dt class="col-sm-2">
            Discount
        </dt>
        <dd id="discount" class="col-sm-10">
            
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

@section scripts{ 
    
    <script type="text/javascript">
        $(function() {
            var discount = getQueryParam('discount');
            $("#discount").html(discount);
        });

        function getQueryParam(key) {
            key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&"); // escape RegEx control chars
            var match = location.search.match(new RegExp("[?&]" + key + "=([^&]+)(&|$|#)"));
            return match && decodeURIComponent(match[1].replace(/\+/g, " "));
        }

    </script>
}
